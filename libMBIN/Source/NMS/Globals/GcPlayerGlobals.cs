using libMBIN.NMS.GameComponents;
using libMBIN.NMS.Toolkit;

namespace libMBIN.NMS.Globals {

    [NMS( GUID = 0x229B325674CE447F )]
    public class GcPlayerGlobals : GlobalDataType {

        /* 0x0 */ public bool InteractNearbyRadiusEnabled;
        /* 0x1 */ public bool DebugExperience;
        [NMS(Size = 0x80)]
		/* 0x2 */ public string DefaultShipFilename;

        [NMS(Size = 0x6, Ignore = true)]
        /* 0x82 */ public byte[] Padding82;

        /* 0x88 */ public GcSeed DefaultShipSeed;
		/* 0x98 */ public bool DebugExperienceRender;
		/* 0x99 */ public bool DebugDroneScanPlayer;

        [NMS(Size = 0x6, Ignore = true)]
        /* 0x9A */ public byte[] Padding9A;

		/* 0xA0 */ public Vector4f DebugDroneSpawn;
		/* 0xB0 */ public Vector4f DebugDroneTarget;
		/* 0xC0 */ public int DebugNumDrones;

        [NMS(Size = 0xC, Ignore = true)]
        /* 0xC4 */ public byte[] PaddingC4;

		/* 0xD0 */ public Vector4f DebugWalkerSpawn;
		/* 0xE0 */ public Vector4f DebugWalkerTarget;
		/* 0xF0 */ public Vector4f DebugFlybyTarget;
		/* 0x100 */ public Vector4f DebugFlybyDir;
		/* 0x110 */ public float DebugFlybyRange;

        [NMS(Size = 0x4, Ignore = true)]
        /* 0x114 */ public byte[] Padding114;

        /* 0x118 */ public GcSeed DebugFlybySeed;
        [NMS(Size = 0x10)]
        /* 0x128 */ public string DebugExperienceCamShake;
        /* 0x138 */ public float RespawnOnPadRadius;
		/* 0x13C */ public float CockpitEjectTestRadius;
		/* 0x140 */ public float CockpitEjectTestStartHeightOffset;
		/* 0x144 */ public float CockpitEjectTestEndHeightOffset;
		/* 0x148 */ public float CockpitEjectFirstPersonOffsetTime;
		/* 0x14C */ public float CockpitEjectFirstPersonOffset;
		/* 0x150 */ public float MinBinocActiveTime;
		/* 0x154 */ public int RobotMultiplierWithFriends;
		/* 0x158 */ public float DroneStartLocationRadius;
		/* 0x15C */ public float ShipSummonLastSafeMargin;
		/* 0x160 */ public float CreativeModeDeathFadeInTime;
		/* 0x164 */ public float CreativeModeDeathFadeOutTime;
		/* 0x168 */ public int NumberOfWarpsRequiredForFreightersToSpawn;
		/* 0x16C */ public float SpawningDistanceBetweenPlayersAfterWarp;
		/* 0x170 */ public float SpawningSpaceBattleLookOffset;
		/* 0x174 */ public float SpawningSpaceBattleLookOffsetUp;
		/* 0x178 */ public bool MultiplayerShareWanted;
		/* 0x179 */ public bool ReportAllProjectileDamage;
		/* 0x17C */ public int DefaultHitPoints;
		/* 0x180 */ public int DefaultHealthPips;
		/* 0x184 */ public int DefaultShipHealthPips;
		/* 0x188 */ public int MaxHealthPips;
		/* 0x18C */ public bool UseLargeHealthBar;
		/* 0x190 */ public float DroneSpawnAccelerator;
		/* 0x194 */ public float TrackArrowStaticTargetOffsetMultiplier;
		/* 0x198 */ public float WitnessSenseEnhancementTime;
		/* 0x19C */ public float WitnessSenseEnhancement;
		/* 0x1A0 */ public float UnderwaterMargin;
		/* 0x1A4 */ public float MultiplayerMinWanteEscalationTime;
		/* 0x1A8 */ public float HealthRechargeMinTimeSinceDamage;
		/* 0x1AC */ public float HealthPipRechargeRate;
		/* 0x1B0 */ public float MinEnergyPercentOnRespawn;
		/* 0x1B4 */ public float VehicleRaceResultsHintTime;
		/* 0x1B8 */ public float OtherPlayerTrackArrowRange;
		/* 0x1BC */ public float WantedLevelPlayerRange;
		/* 0x1C0 */ public float WantedLevelPlayerRangeSpace;
		/* 0x1C4 */ public float PlayerTransferRange;
		/* 0x1C8 */ public float PlayerSpaceTransferRange;
		/* 0x1CC */ public float DroneScanTimeToForget;
		/* 0x1D0 */ public float GhostbusterStartLength;
		/* 0x1D4 */ public float GhostbusterStart1;
		/* 0x1D8 */ public float GhostbusterSpeed1;
		/* 0x1DC */ public float GhostbusterFreq1;
		/* 0x1E0 */ public float GhostbusterAmp1;
		/* 0x1E4 */ public float GhostbusterStart2;
		/* 0x1E8 */ public float GhostbusterSpeed2;
		/* 0x1EC */ public float GhostbusterFreq2;
		/* 0x1F0 */ public float GhostbusterAmp2;
		/* 0x1F4 */ public float GhostbusterStart3;
		/* 0x1F8 */ public float GhostbusterSpeed3;
		/* 0x1FC */ public float GhostbusterFreq3;
		/* 0x200 */ public float GhostbusterAmp3;
		/* 0x204 */ public bool WeaponZoomEnabled;
		/* 0x208 */ public float WeaponZoomFOV;
		/* 0x20C */ public float WeaponZoomRecoilMultiplier;
		/* 0x210 */ public float WeaponZoomVertRotation;
		/* 0x214 */ public float WeaponZoomHorzRotation;
		/* 0x218 */ public bool FrontShieldEnabled;
		/* 0x21C */ public float FrontShieldOffsetOff;
		/* 0x220 */ public float FrontShieldOffsetOn;
		/* 0x224 */ public float FrontShieldSpeedSlowdown;
		/* 0x228 */ public float CombatSpawnMinWantedTime;
		/* 0x22C */ public float ExperienceHardPiratesDamagePotentialMin;
		/* 0x230 */ public float ExperienceHardPiratesDamagePotentialRange;
		/* 0x234 */ public float ExperienceHardPiratesDamageMaxOdds;
		/* 0x238 */ public float ExperienceMediumPiratesDamagePotentialMin;
		/* 0x23C */ public float ExperienceMediumPiratesDamagePotentialRange;
		/* 0x240 */ public float ExperienceMediumPiratesDamageMaxOdds;
		/* 0x244 */ public float CommunicatorSpeed;
		/* 0x248 */ public float GrenadeBounceDamping;
		/* 0x24C */ public float GrenadeBounceMaxSpeed;
		/* 0x250 */ public float GrenadeStopExplodeTime;
		/* 0x254 */ public float CockpitEjectTestSphereRadius;
		/* 0x258 */ public float CockpitEjectTestSphereRange;
		/* 0x25C */ public float CockpitEjectSideTestRange;
		/* 0x260 */ public float WeaponShotgunSlowdown;
		/* 0x264 */ public int MouseSmoothMode;
		/* 0x268 */ public Vector2f MouseSpringStrength;
		/* 0x270 */ public Vector2f MouseSpringStrengthMinDelta;
		/* 0x278 */ public Vector2f MouseSpringStrengthMaxDelta;
		/* 0x280 */ public float HardModeEnergyDischargeRateLow;
		/* 0x284 */ public float HardModeEnergyDischargeRateMedium;
		/* 0x288 */ public float HardModeEnergyDischargeRateHigh;
		/* 0x28C */ public float HazardDamageMinTime;
		/* 0x290 */ public float EnergyDamageMinTime;
		/* 0x294 */ public float EnergyDischargeRateLow;
		/* 0x298 */ public float EnergyDischargeRateMedium;
		/* 0x29C */ public float EnergyDischargeRateHigh;
		/* 0x2A0 */ public float EnergyDischargeRateFloatingInSpace;
		/* 0x2A4 */ public float EnergyPainRate;
		/* 0x2A8 */ public float SolarRegenFactor;

        [NMS(Size = 0x4, Ignore = true)]
        /* 0x2AC */ public byte[] Padding2AC;

        /* 0x2B0 */ public Colour DefaultMuzzleColour;
        /* 0x2C0 */ public Colour TerrainEditorMuzzleColourSubtract;
        /* 0x2D0 */ public Colour TerrainEditorMuzzleColourAdd;
        /* 0x2E0 */ public Colour TerrainEditorMuzzleColourUndo;
        /* 0x2F0 */ public Colour DefaultMuzzleLaserColour;
        /* 0x300 */ public float FreeJetpackRange;
        /* 0x304 */ public float FreeJetpackRangeNonTerrain;
        /* 0x308 */ public float JetpackDrainHorizontalFactor;
        /* 0x30C */ public float MinTimeAfterMeleeBeforeBoost;
        /* 0x310 */ public float MaxTimeAfterMeleeBeforeBoost;
        /* 0x314 */ public float MeleeBoostAirForce;
        /* 0x318 */ public float MeleeToAirBoostInitialImpulse;
        /* 0x31C */ public float MaxTimeInMeleeBoost;
        /* 0x320 */ public bool RocketBootsEnabled;
        /* 0x321 */ public bool RocketBootsUseCustomCamera;
        /* 0x324 */ public float RocketBootsActivationWindow;
        /* 0x328 */ public float RocketBootsDoubleTapTime;
        /* 0x32C */ public float RocketBootsImpulse;
        /* 0x330 */ public float RocketBootsBoostForce;
        /* 0x334 */ public float RocketBootsDriftForce;
        /* 0x338 */ public float RocketBootsForceStartTime;
        /* 0x33C */ public float RocketBootsForceDuration;
        /* 0x340 */ public float RocketBootsMinDesiredHeight;
        /* 0x344 */ public float RocketBootsMaxDesiredHeight;
        /* 0x348 */ public float RocketBootsHeightAdjustTime;
        /* 0x34C */ public float RocketBootsHeightAdjustUpStrength;
        /* 0x350 */ public float RocketBootsHeightAdjustDownStrength;
        /* 0x354 */ public float RocketBootsJetpackMinLevel;
        /* 0x358 */ public float RocketBootsBoostTankDrainSpeed;
        /* 0x35C */ public float RocketBootsDriftTankDrainSpeed;
        /* 0x360 */ public float RocketBootsBoostOnTime;
        /* 0x364 */ public float RocketBootsBoostOffTime;
        /* 0x368 */ public float RocketBootsZigZagStrength;
        /* 0x36C */ public float RocketBootsZigZagForceDuration;
        /* 0x370 */ public float RocketBootsMaxSpeed;
        /* 0x374 */ public float RocketBootsDriftEndTime;
        /* 0x378 */ public float RocketBootsWindUpBraking;
        /* 0x37C */ public float RocketBootsDriftBraking;
        /* 0x380 */ public float RocketBootsDriftDownwardForce;
        /* 0x384 */ public float JetpackForce;
        /* 0x388 */ public float JetpackBrake;
        /* 0x38C */ public float JetpackMinLevel;
        /* 0x390 */ public float JetpackMaxSpeed;
        /* 0x394 */ public float JetpackMaxUpSpeed;
        /* 0x398 */ public float JetpackUpForce;
        /* 0x39C */ public float JetpackIgnitionForce;
        /* 0x3A0 */ public float JetpackIgnitionTime;
        /* 0x3A4 */ public float JetpackMinIgnitionTime;
        [NMS(Size = 0x3)]
        /* 0x3A8 */ public float[] JetpackTankTimes;
        /* 0x3B4 */ public float JetpackFillRate;
        /* 0x3B8 */ public float JetpackFillRateHardMode;
        /* 0x3BC */ public float JetpackFillRateSpaceStationMultiplier;
        /* 0x3C0 */ public float JetpackUpForceDeadPlanetExtra;
        /* 0x3C4 */ public float JetpackForceDeadPlanetExtra;
        /* 0x3C8 */ public float JetpackIgnitionForceDeadPlanetExtra;
        /* 0x3CC */ public bool EnableHeadMovements;
        /* 0x3CD */ public bool ClampPitch;
        /* 0x3D0 */ public float DamageRepairFactor;
        /* 0x3D4 */ public float DamageRepairFactorHardMode;
        /* 0x3D8 */ public float NormalModeHazardTimeMultiplier;
        /* 0x3DC */ public float NormalModeHazardDamageRateMultiplier;
        /* 0x3E0 */ public float NormalModeHazardDamageWoundRateMultiplier;
        /* 0x3E4 */ public float NormalModeSubstanceRewardMultiplier;
        /* 0x3E8 */ public float NormalModeHazardRechargeUnderground;
        /* 0x3EC */ public float HardModeHazardTimeMultiplier;
        /* 0x3F0 */ public float HardModeHazardDamageRateMultiplier;
        /* 0x3F4 */ public float HardModeHazardDamageWoundRateMultiplier;
        /* 0x3F8 */ public float HardModeSubstanceRewardMultiplier;
        /* 0x3FC */ public float HardModeHazardRechargeUnderground;
        /* 0x400 */ public float FreighterProbeScanTime;
        /* 0x404 */ public int MaxNumDestroyEffects;
        /* 0x408 */ public int MinNumDestroyEffects;
        /* 0x40C */ public float ProjectileEndTime;
        /* 0x410 */ public float ExplosionTimePerEffect;
        /* 0x414 */ public float ExplosionTimeVariance;
        /* 0x418 */ public float ExplosionScaleVariance;
        /* 0x41C */ public float ExplosionBoundingInset;
        /* 0x420 */ public float ExplosionBoundingInsetRange;
        /* 0x424 */ public float DestroyEffectFinalDelay;
        /* 0x428 */ public float ShipPriceExp2;
        /* 0x42C */ public float WeaponPriceExp2;
        /* 0x430 */ public float FreighterPriceExp2;
        /* 0x434 */ public float ShipCoolFactor;
        /* 0x438 */ public float WeaponCoolFactor;
        /* 0x43C */ public float FreighterCoolFactor;
        /* 0x440 */ public bool MouseCrosshairVisible;
        /* 0x444 */ public float MouseMaxLength;
        /* 0x448 */ public float MouseDeadZone;
        /* 0x44C */ public float MouseAimZone;
        /* 0x450 */ public float MouseCrosshairMaxAlpha;
        /* 0x454 */ public float MouseCrosshairAlphaFade;
        /* 0x458 */ public float MouseCrosshairAlphaFadeSpeed;
        /* 0x45C */ public float MouseCrosshairLineAlpha;
        /* 0x460 */ public float MouseCrosshairLineWidth;
        /* 0x464 */ public float MouseCrosshairShipStrength;
        /* 0x468 */ public float MouseCrosshairMultiplier;
        /* 0x46C */ public bool UseEnergy;
        /* 0x46D */ public bool InventoryDamage;
        /* 0x46E */ public bool NeverPreyedOn;
        /* 0x46F */ public bool PermanantFire;
        /* 0x470 */ public bool PermanantAltFire;
        /* 0x471 */ public bool LuckyWithTech;
        /* 0x474 */ public int BulletCostReducer;
        /* 0x478 */ public int BulletClipMultiplier;
        /* 0x47C */ public float LootForceMultiplier;
        /* 0x480 */ public float WoundTimeMinimum;
        /* 0x484 */ public float WoundDamageLimit;
        /* 0x488 */ public float WoundDamageLimitShip;
        /* 0x48C */ public float WoundDamageDecayTime;
        /* 0x490 */ public float ResourceBlobFinalScaleDistance;
        /* 0x494 */ public float LaserPlayerOffset;
        /* 0x498 */ public float WalkerAlertRange;
        /* 0x49C */ public float WalkerSightRange;
        /* 0x4A0 */ public float WalkerSightAngle;
        /* 0x4A4 */ public float CombatEscalateTime;
        /* 0x4A8 */ public float CombatEscapeRadius;
        /* 0x4AC */ public float CombatEscapeTime;
        /* 0x4B0 */ public bool UpgradeExosuitWithProduct;

        [NMS(Size = 0x7, Ignore = true)]
        /* 0x441 */ public byte[] Padding4A1;

        [NMS(Size = 0x10)]
        /* 0x4B8 */ public string ExosuitUpgradeProduct;
        /* 0x4C8 */ public int SuitInventoryStartSeed;
        /* 0x4CC */ public int MaxNumShipsAttackingPlayer;
        /* 0x4D0 */ public float ObjectScanTime;
        /* 0x4D4 */ public float DroneProbeScanTime;
        /* 0x4D8 */ public int PirateHailPercent;
        /* 0x4DC */ public float PirateBountyInitTime;
        /* 0x4E0 */ public float PirateProbeInitTime;
        /* 0x4E4 */ public float PirateProbeAttackWaitTime;
        /* 0x4E8 */ public float PirateProbeAttackWarnTime;
        /* 0x4EC */ public float PirateProbeScanTime;
        /* 0x4F0 */ public float PirateProbeScanTotalTime;
        /* 0x4F4 */ public float PirateProbeHailPause;
        /* 0x4F8 */ public float PirateBattleMarkerRange;
        /* 0x4FC */ public float PirateBattleWarnTime;
        /* 0x500 */ public float PirateBattleMarkerTime;
        /* 0x504 */ public float PirateBattleMaxTime;
        [NMS(Size = 0x20)]
        /* 0x508 */ public string TraderHailReceiveOSDLoc;
        [NMS(Size = 0x20)]
        /* 0x528 */ public string TraderHailRefusedOSDLoc;
        /* 0x548 */ public float TraderHailTime;
        /* 0x54C */ public float TraderApproachTime;
        /* 0x550 */ public float TraderHailDistance;
        /* 0x554 */ public float TraderApproachDistance;
        /* 0x558 */ public float TraderSpamTimeWait;
        /* 0x55C */ public float TraderStayCloseLockOffset;
        /* 0x560 */ public float TraderStayCloseLockSin1Coeff;
        /* 0x564 */ public float TraderStayCloseLockSin1Offset;
        /* 0x568 */ public float TraderStayCloseLockSin2Coeff;
        /* 0x56C */ public float TraderStayCloseLockSin2Offset;
        /* 0x570 */ public float TraderStayCloseLockSinsAdd;
        /* 0x574 */ public float TraderStayCloseLockSpread;
        /* 0x578 */ public float TraderStayCloseLockSpreadAdd;
        /* 0x57C */ public float TraderStayCloseLockSpreadTime;
        /* 0x580 */ public float TraderHealthFightThreshold;
        /* 0x584 */ public int TraderCommunicationBanMinTime;
        /* 0x588 */ public int TraderCommunicationBanMaxTime;
        /* 0x58C */ public float LaserMiningDamageMultiplier;
        /* 0x590 */ public float ShieldRechargeMinTimeSinceDamage;
        /* 0x594 */ public float ShieldRechargeRate;
        /* 0x598 */ public float MoveStickHighRangeLimit;
        /* 0x59C */ public float WitnessAIDamageDistance;
        /* 0x5A0 */ public float WitnessAIDamageAngle;
        /* 0x5A4 */ public float DeathDamageDrainChargeFactor;
        /* 0x5A8 */ public int DeathDamageTechBrokenPercent;
        /* 0x5AC */ public float MaxProjectileRadiusMultiplier;
        /* 0x5B0 */ public float HardLandPainTime;
        /* 0x5B4 */ public int GunBaseClipSize;
        /* 0x5B8 */ public int GrenadeBaseClipSize;
        /* 0x5BC */ public float MeleeCooldown;
        /* 0x5C0 */ public float ChargeMeleeCooldown;
        /* 0x5C4 */ public float MeleeDistance;
        /* 0x5C8 */ public float MeleeDistance3P;
        /* 0x5CC */ public float MeleeRadius;
        /* 0x5D0 */ public float MeleeHitTime;
        /* 0x5D4 */ public float MeleeSpeedBoost;
        /* 0x5D8 */ public float MeleeSpeedDamageBoost;
        /* 0x5DC */ public float MeleeSpeedBoostRangeMultiplier;
        /* 0x5E0 */ public float MeleeStaminaDrain;
        /* 0x5E4 */ public float TemperatureDisplaySampleTime;
        /* 0x5F0 */ public Colour StarFieldColour;
        /* 0x600 */ public float StarFieldRadius;
        /* 0x604 */ public float StarFieldDensity;
        /* 0x608 */ public float StarFieldStarSize;
        /* 0x60C */ public float SpeedLinesSpeedMin;
        /* 0x610 */ public float SpeedLinesSpeedMax;
        /* 0x614 */ public float SpeedLinesLength;
        /* 0x618 */ public float SpeedLinesTotalLength;
        /* 0x61C */ public float SpeedLinesWidthMin;
        /* 0x620 */ public float SpeedLinesWidthMax;
        /* 0x624 */ public float SpeedLinesRadiusStartMin;
        /* 0x628 */ public float SpeedLinesRadiusStartMax;
        /* 0x62C */ public float SpeedLinesRadiusIncrement;
        /* 0x630 */ public float SpeedLinesStartFade;
        /* 0x634 */ public float SpeedLinesMinAlpha;
        /* 0x638 */ public float SpeedLinesMaxAlpha;
        /* 0x63C */ public float SpeedLinesOffset;
        /* 0x640 */ public float SleepFadeTime;
        /* 0x644 */ public float StaminaRate;
        /* 0x648 */ public float StaminaRecoveryRate;
        /* 0x64C */ public float StaminaRecoveredFactor;
        /* 0x650 */ public float ScanLabelTime;
        /* 0x654 */ public float ScanWobbleFreq;
        /* 0x658 */ public float ScanWobbleAmp;
        /* 0x65C */ public float ScanWobbleFreq2;
        /* 0x660 */ public float ScanWobbleAmp2;
        /* 0x664 */ public float ScanRotate;
        /* 0x668 */ public float ScanRotateDist;
        /* 0x66C */ public float ScanRotateWobbleAmp;
        /* 0x670 */ public float ScanFadeInTime;
        /* 0x674 */ public float ScanFadeOutTime;
        /* 0x678 */ public float ScanBeamWidth;
        /* 0x67C */ public float ScanRotateBeamWdith;
        /* 0x680 */ public float ScanBeamMainWidth;
        /* 0x684 */ public float WantedDroneEventRadius;
        /* 0x688 */ public float WantedMinSpaceTime;
        /* 0x68C */ public float WantedMinPlanetTime;
        /* 0x690 */ public float WantedLevelDelay;
        /* 0x694 */ public float WantedWitnessTimer;
        /* 0x698 */ public float WantedWitnessFuzzyTime;
        /* 0x69C */ public float WantedMinorCrimeAmount;
        /* 0x6A0 */ public float WantedTimeoutAggressive;
        [NMS(Size = 0x5)]
        /* 0x6A4 */ public float[] WantedTimeout;
        [NMS(Size = 0x5)]
        /* 0x6B8 */ public float[] WantedEscalateTime;
        [NMS(Size = 0x5)]
        /* 0x6CC */ public float[] WantedExtremeEscalateTime;
        /* 0x6E0 */ public float ControlModes;
        /* 0x6E4 */ public float InteractionScanRange;
        /* 0x6E8 */ public float InteractionButtonRange;
        /* 0x6EC */ public float InteractionFocusTime;
        /* 0x6F0 */ public float InteractionSubstanceRange;
        /* 0x6F4 */ public float HeatShieldTime;
        /* 0x6F8 */ public float LaserShakeMin;
        /* 0x6FC */ public float LaserShakeMax;
        /* 0x700 */ public float GunRecoil;
        /* 0x704 */ public float LaserRecoil;
        /* 0x708 */ public float BeamRecoil;
        /* 0x70C */ public float GrenadeRecoil;
        /* 0x710 */ public float GunRecoilSpring;
        /* 0x714 */ public float BlastRecoilSpring;
        /* 0x718 */ public float RailRecoilSpring;
        /* 0x71C */ public float PulseRecoilSpring;
        /* 0x720 */ public float GunRecoilSettleSpring;
        /* 0x724 */ public float ThirdPersonRecoilMultiplier;
        /* 0x728 */ public float GunRecoilMin;
        /* 0x72C */ public float GunRecoilMax;
        /* 0x730 */ public float ProjectileDamageFalloff;
        /* 0x734 */ public float ShotgunDispersion;
        /* 0x738 */ public GcResourceCollectEffect TerrainResourceCollect;
        /* 0x76C */ public GcResourceCollectEffect TerrainResourceMiniCollect;
        /* 0x7A0 */ public GcResourceCollectEffect TerrainResourceMeleeCollect;
        /* 0x7D4 */ public GcResourceCollectEffect CrystalResourceCollect;
        /* 0x808 */ public GcResourceCollectEffect ShardResourceCollect;
        /* 0x83C */ public GcBoidData MissileSwarm;
        /* 0x868 */ public GcPlayerStickData StickData;
        /* 0x884 */ public bool AutoAim;
        /* 0x888 */ public float AutoAimMaxAccelFactor;
        /* 0x88C */ public float AutoAimFixedInterceptSpeed;
        /* 0x890 */ public float AutoAimTimeOut;
        /* 0x894 */ public float AutoAimMaxAngle;
        /* 0x898 */ public float AutoAimMinScreenDistance;
        /* 0x89C */ public float AutoAimRadiusExtra;
        /* 0x8A0 */ public float AutoAimStickyMin;
        /* 0x8A4 */ public float AutoAimStickyMax;
        /* 0x8A8 */ public TkCurveType AutoAimDotCurve;
        /* 0x8AC */ public TkCurveType AutoAimCentreOffsetCurve;
        /* 0x8B0 */ public float AimDistanceShip;
        /* 0x8B4 */ public float AimSpeed;
        /* 0x8B8 */ public float AimWeightAdd;
        /* 0x8BC */ public float AimMinWeight;
        /* 0x8C0 */ public float AimDecay;
        /* 0x8C4 */ public float AimOffset;
        /* 0x8C8 */ public float AimShootableTargetAngle;
        /* 0x8CC */ public float AimDisperseTime;
        /* 0x8D0 */ public float AimDisperseMinTime;
        /* 0x8D4 */ public float AimDisperseCooldownTime;
        /* 0x8D8 */ public float AimDisperseCooldownFactor;
        /* 0x8DC */ public TkCurveType AimDisperseCurve;
        /* 0x8E0 */ public float CrosshairTime;
        /* 0x8E4 */ public float BeaconActivateRange;
        /* 0x8E8 */ public float ExperiencePirateFreighterAttackRange;
        /* 0x8EC */ public float ExperienceWalkerSize;
        /* 0x8F0 */ public float ExperienceInterestingShipDistance;
        /* 0x8F4 */ public float ExperienceInterestingFreighterDistance;
        /* 0x8F8 */ public float ExperienceInterestingDroneDistance;
        /* 0x8FC */ public float ExperienceShipTimeMin;
        /* 0x900 */ public float ExperienceShipTimeMax;
        /* 0x904 */ public int ExperiencePirateCloseAttackPercentage;
        /* 0x908 */ public float ExperiencePirateTimeMin;
        /* 0x90C */ public float ExperiencePirateTimeMax;
        /* 0x910 */ public float ExperienceDroneTimeMin;
        /* 0x914 */ public float ExperienceDroneTimeMax;
        /* 0x918 */ public float ExperienceFlybyScareRadius;
        /* 0x91C */ public float ExperienceFlybyScareTime;
        /* 0x920 */ public Vector2f ExperienceFlybyStartAngle;
        /* 0x928 */ public float ExperienceAlertRange;
        /* 0x92C */ public float ExperienceAlertSightRange;
        /* 0x930 */ public float ExperienceAlertSightAngle;
        /* 0x934 */ public float ExperienceDroneSpawnOffset;
        /* 0x938 */ public float ExperienceDroneSpawnAngle;
        /* 0x93C */ public float ExperienceMessageBroadcastNearbyDistance;
        /* 0x940 */ public float WantedEnemyAttackAmount;
        [NMS(Size = 0x80)]
        /* 0x944 */ public string Gun;
        /* 0x9C4 */ public float StickDeadZoneMin;
        /* 0x9C8 */ public float StickDeadZoneMax;
        /* 0x9CC */ public TkCurveType StickCurve;
        /* 0x9D0 */ public float AutoLandRange;
        /* 0x9D4 */ public float AutoLandTime;
        /* 0x9D8 */ public float LabelSpringTime;
        /* 0x9DC */ public float LabelOffset;
        /* 0x9E0 */ public float AtmosphereEffectTime;
        /* 0x9E4 */ public float AtmosphereEffectOffset;
        [NMS(Size = 0x7)]
        /* 0x9E8 */ public GcCreatureAlertData[] AlertTable;
        /* 0xA90 */ public float PainFlickerAmount;
        /* 0xA94 */ public float PainColourSeperateAmount;
        /* 0xA98 */ public float PainTime;
        /* 0xA9C */ public GcProjectileLineData PlayerBullet;
        /* 0xAC4 */ public GcProjectileLineData RobotBullet;
        /* 0xAEC */ public GcProjectileLineData ShipBullet;
        /* 0xB14 */ public float ExplodeShakeMaxDist;
        /* 0xB18 */ public float ExplodeShakeMaxDistSpace;
        /* 0xB1C */ public float ExplodeShakeStrength;
        /* 0xB20 */ public float FlashSize;
        /* 0xB24 */ public float FlashPosX;
        /* 0xB28 */ public float FlashPosY;
        /* 0xB2C */ public float FlashPosZ;
        /* 0xB30 */ public float FlashSpeed;
        /* 0xB34 */ public float FlashPulse;
        /* 0xB38 */ public float FlashGrow;
        /* 0xB3C */ public float GunRightOffset;
        /* 0xB40 */ public float GunUpOffset;
        /* 0xB44 */ public float LaserBeamMineRate;
        /* 0xB48 */ public float LaserBeamCore;
        /* 0xB4C */ public float LaserBeamFlickerAmp;
        /* 0xB50 */ public float LaserBeamFlickerFreq;
        /* 0xB54 */ public float LaserEndOffset;
        /* 0xB58 */ public float GrenadeTerrainDeformRadius;
        /* 0xB5C */ public float LaserBeamTerrainDeformRadius;
        /* 0xB60 */ public float LaserBeamTerrainDeformVariance;
        /* 0xB64 */ public float LaserBeamOverheatTime;
        /* 0xB68 */ public float LaserBeamAmmoUseTime;
        /* 0xB6C */ public float ReloadButtonHoldTimeToHolster;
        /* 0xB70 */ public float WeaponChangeModeTime;

        [NMS(Size = 0xC, Ignore = true)]
        /* 0xB74 */ public byte[] PaddingB74;

        /* 0xB80 */ public Vector4f WeaponBarrelOffset;
        /* 0xB90 */ public float WeaponLowerDelay;
        /* 0xB94 */ public float WeaponHolsterDelay;
        /* 0xB98 */ public float WeaponLag;
        /* 0xB9C */ public float WeaponBobFactorWalkDeadZone;
        /* 0xBA0 */ public float WeaponBobFactorWalk;
        /* 0xBA4 */ public float WeaponBobFactorRun;
        /* 0xBA8 */ public float WeaponBobBlendTime;
        /* 0xBAC */ public TkCurveType WeaponBobBlendCurve;
        /* 0xBB0 */ public float WeaponGrenadeTime;
        /* 0xBB4 */ public float WeaponGunTime;
        /* 0xBB8 */ public float WeaponRailFireTime;
        /* 0xBBC */ public float WeaponRailRechargeTime;
        /* 0xBC0 */ public int MaxBuildHeight;
        /* 0xBC4 */ public float SpaceMaxGravityDist;
        /* 0xBC8 */ public float SpaceMinGravityDist;
        /* 0xBCC */ public float UnderwaterImpact;
        /* 0xBD0 */ public float UnderwaterMaxSpeed;
        /* 0xBD4 */ public float UnderwaterForce;
        /* 0xBD8 */ public float UnderwaterBrake;
        /* 0xBDC */ public float UnderwaterFloat;
        /* 0xBE0 */ public float UnderwaterFloatForce;
        /* 0xBE4 */ public float UnderwaterFloatRange;
        /* 0xBE8 */ public float UnderwaterFloatFreq;
        /* 0xBEC */ public float BulletBend;
        /* 0xBF0 */ public float ShootSizeMinZ;
        /* 0xBF4 */ public float ShootSizeMaxZ;
        /* 0xBF8 */ public float ShootSizeMinXY;
        /* 0xBFC */ public float ShootSizeMaxXY;
        /* 0xC00 */ public float ShootSizeTime;
        /* 0xC04 */ public float ShootSizeBase;
        /* 0xC08 */ public float ShootOffset;
        /* 0xC0C */ public float ShootPrepTime;
        /* 0xC10 */ public float GrenadeCarveRadius;
        /* 0xC14 */ public float ChargeTime;
        /* 0xC18 */ public float EnergyBallSpeed;
        /* 0xC1C */ public float ChargedEnergyBallSpeed;
        /* 0xC20 */ public float LookRayRadius;
        /* 0xC24 */ public float PickRange;
        /* 0xC28 */ public float DamageRateWhenUnderNoGravity;
        /* 0xC2C */ public float TakeDamageImpulse;
        /* 0xC30 */ public float HardLandTime;
        /* 0xC34 */ public float HardLandMin;
        /* 0xC38 */ public float HardLandMax;
        /* 0xC3C */ public float MeleeRange;
        /* 0xC40 */ public float MeleeTime;
        /* 0xC44 */ public float MeleeForcePush;
        /* 0xC48 */ public float MeleeOffset;
        /* 0xC4C */ public float PushForceAirFactor;
        /* 0xC50 */ public int HUDHeightPosX;
        /* 0xC54 */ public int HUDHeightPosY;
        /* 0xC58 */ public float TargetDistance;
        /* 0xC5C */ public float TargetRadius;
        /* 0xC60 */ public float HoldForce;
        /* 0xC64 */ public float HoldTime;
        /* 0xC68 */ public float HoldActionDistX;
        /* 0xC6C */ public float HoldActionDistY;
        /* 0xC70 */ public float HoldActionDistZ;
        /* 0xC74 */ public float HoldDistX;
        /* 0xC78 */ public float HoldDistY;
        /* 0xC7C */ public float HoldDistZ;
        /* 0xC80 */ public float HoldMaxForce;
        /* 0xC84 */ public float HoldRotate;
        /* 0xC88 */ public float BalanceStrength;
        /* 0xC8C */ public float BalanceSpeed;
        /* 0xC90 */ public float GroundWalkForce;
        /* 0xC94 */ public float GroundWalkBrake;
        /* 0xC98 */ public float GroundWalkBrakeWhileMoving;
        /* 0xC9C */ public float GroundWalkSpeed;
        /* 0xCA0 */ public float GroundRunSpeed;
        /* 0xCA4 */ public float GroundWalkRecoverySpeedDamper;
        /* 0xCA8 */ public float ExertionSmoothTime;
        /* 0xCAC */ public float ExertionFromPainTime;
        /* 0xCB0 */ public float AnimWalkSpeed;
        /* 0xCB4 */ public float AnimRunSpeed;
        /* 0xCB8 */ public float AnimWalkToRunSpeed;
        /* 0xCBC */ public float AnimWalkBlendPoint;
        /* 0xCC0 */ public float AnimRunBlendPoint;
        /* 0xCC4 */ public float MaxSlopeAngle;
        /* 0xCC8 */ public float SlopeSlidingSpeed;
        /* 0xCCC */ public float SlopeSlideBrake;
        /* 0xCD0 */ public float MinSlideTime;
        /* 0xCD4 */ public float MaxWalkableSlopeAngle;
        /* 0xCD8 */ public float MinSpidermanSlopeAngle;
        /* 0xCDC */ public float MinTimeToHoldSpidermanPose;
        /* 0xCE0 */ public float MaxSpidermanSlopeAngle;
        /* 0xCE4 */ public float MaxClingableSlopeAngle;
        /* 0xCE8 */ public float MinimumPushOffForceToSlide;
        /* 0xCEC */ public float FullClipReloadSpeedMultiplier;
        /* 0xCF0 */ public float ReloadTapButtonSpeedIncrease;
        /* 0xCF4 */ public float ClingBrakeMultiplier;
        /* 0xCF8 */ public float ClingAngleThreshold;
        /* 0xCFC */ public float ClingSpeedThreshold;
        /* 0xD00 */ public float ClimbableStickinessAngle;
        /* 0xD04 */ public float MinUpAmount;
        /* 0xD08 */ public float FootOffset;
        /* 0xD0C */ public float MaxFallSpeed;
        /* 0xD10 */ public float PushForceDecay;
        /* 0xD14 */ public float LeanFwdMaxAngle;
        /* 0xD18 */ public float LeanBackMaxAngle;
        /* 0xD1C */ public float LeanLeftMaxAngle;
        /* 0xD20 */ public float LeanRightMaxAngle;
        /* 0xD24 */ public float LeanAmount;
        /* 0xD28 */ public float LeanAmountFwd;
        /* 0xD2C */ public float HelmetLag;
        /* 0xD30 */ public float HelmetMaxLag;
        /* 0xD34 */ public float HelmetBob;
        /* 0xD38 */ public float JetpackHelmetBob;
        /* 0xD3C */ public float ShipCameraLag;
        /* 0xD40 */ public float MaxResource;
        /* 0xD44 */ public float ShieldRestoreSpeed;
        /* 0xD48 */ public float ShieldRestoreDelay;
        /* 0xD4C */ public float TimeHoldDownAccelerateToLaunchFromOutpost;
        /* 0xD50 */ public float DeathScreenFadeInThirdPerson;
        /* 0xD54 */ public float DeathScreenFadeInUnderwaterThirdPerson;
        /* 0xD58 */ public float DeathScreenFadeInTime;
        /* 0xD5C */ public float DeathScreenShipFadeInTime;
        /* 0xD60 */ public float DeathScreenPauseTime;
        /* 0xD64 */ public float DeathScreenMaxRegenWaitTime;
        /* 0xD68 */ public float DeathScreenMinRegenWaitTime;
        /* 0xD6C */ public float DeathScreenFadeOutTime;
        /* 0xD70 */ public GcPlayerStickData LookStickData;
        /* 0xD8C */ public GcPlayerStickData AmbientModeLookStickData;
        /* 0xDA8 */ public int LowHealthEffectPips;
        /* 0xDAC */ public int LowHealthEffectShield;
        /* 0xDB0 */ public float CriticalHitTime;
        /* 0xDB4 */ public float CriticalHitDesatTime;
        /* 0xDB8 */ public float CriticalHitDesatFreq;
        [NMS(Size = 0x2)]
        /* 0xDBC */ public GcCameraSpawnSetupData[] FirstSpawnDataTable;
        /* 0xDDC */ public GcInventoryValueData ShipValueData;
        /* 0xDF8 */ public GcInventoryValueData WeaponValueData;
        /* 0xE14 */ public GcInventoryValueData FreighterValueData;
        [NMS(Size = 0x7)]
        /* 0xE30 */ public float[] TechRarityData;
        [NMS(Size = 0x6)]
        /* 0xE4C */ public float[] TechLearningProbabilities;
        /* 0xE64 */ public int NumTechShopSlots;
        /* 0xE68 */ public float GrassPushDistance;

        [NMS(Size = 0x4, Ignore = true)]
        /* 0xE6C */ public byte[] PaddingD1C;

        /* 0xE70 */ public GcCameraAnomalySetupData AnomalyBlachHoleSpawnData;
        /* 0xEB0 */ public GcCameraAnomalySetupData AnomalyAtlasStationSpawnData;
        /* 0xEF0 */ public GcCameraAnomalySetupData AnomalyMiniStationSpawnData;
        /* 0xF30 */ public GcJourneyMedalTiers MedalTiers;
        /* 0xF40 */ public int LowGuildRank;
        /* 0xF44 */ public int MedGuildRank;
        /* 0xF48 */ public int HighGuildRank;
        /* 0xF4C */ public int BestGuildRank;
        /* 0xF50 */ public float LaserWeaponRange;
        /* 0xF54 */ public float LaserShipRange;
        /* 0xF58 */ public float TerrainLaserRange;
        /* 0xF5C */ public float VehicleLaserRange;
        /* 0xF60 */ public GcPlayerCommunicatorMessage PirateHailMessage;
        /* 0xFB0 */ public GcShipDialogue TraderHailMessages;
        [NMS(Size =  0x4)]
        /* 0x1218 */ public int[] TraderHailReceiveRegular;
        [NMS(Size = 0x2)]
        /* 0x1228 */ public int[] TraderHailReceiveFight;
        [NMS(Size =  0x4)]
        /* 0x1230 */ public int[] TraderHailSend;

    }

}
